// Mocks generated by Mockito 5.4.6 from annotations
// in bookswap/test/unit/resource_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_l
import 'dart:async' as _i4;

import 'package:bookswap/data/models/resource_model.dart' as _i2;
import 'package:bookswap/data/services/api_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResourceModel_0 extends _i1.SmartFake implements _i2.ResourceModel {
  _FakeResourceModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSwapRequestModel_1 extends _i1.SmartFake
    implements _i2.SwapRequestModel {
  _FakeSwapRequestModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.ResourceModel>> getResources() => (super.noSuchMethod(
        Invocation.method(
          #getResources,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.ResourceModel>>.value(<_i2.ResourceModel>[]),
      ) as _i4.Future<List<_i2.ResourceModel>>);

  @override
  _i4.Future<_i2.ResourceModel> addResource(_i2.ResourceModel? resource) =>
      (super.noSuchMethod(
        Invocation.method(
          #addResource,
          [resource],
        ),
        returnValue: _i4.Future<_i2.ResourceModel>.value(_FakeResourceModel_0(
          this,
          Invocation.method(
            #addResource,
            [resource],
          ),
        )),
      ) as _i4.Future<_i2.ResourceModel>);

  @override
  _i4.Future<_i2.ResourceModel> updateResource(_i2.ResourceModel? resource) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateResource,
          [resource],
        ),
        returnValue: _i4.Future<_i2.ResourceModel>.value(_FakeResourceModel_0(
          this,
          Invocation.method(
            #updateResource,
            [resource],
          ),
        )),
      ) as _i4.Future<_i2.ResourceModel>);

  @override
  _i4.Future<void> deleteResource(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteResource,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.SwapRequestModel>> getSwapRequests(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSwapRequests,
          [userId],
        ),
        returnValue: _i4.Future<List<_i2.SwapRequestModel>>.value(
            <_i2.SwapRequestModel>[]),
      ) as _i4.Future<List<_i2.SwapRequestModel>>);

  @override
  _i4.Future<_i2.SwapRequestModel> addSwapRequest(
          _i2.SwapRequestModel? swapRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSwapRequest,
          [swapRequest],
        ),
        returnValue:
            _i4.Future<_i2.SwapRequestModel>.value(_FakeSwapRequestModel_1(
          this,
          Invocation.method(
            #addSwapRequest,
            [swapRequest],
          ),
        )),
      ) as _i4.Future<_i2.SwapRequestModel>);

  @override
  _i4.Future<_i2.SwapRequestModel> updateSwapRequest(
          _i2.SwapRequestModel? swapRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSwapRequest,
          [swapRequest],
        ),
        returnValue:
            _i4.Future<_i2.SwapRequestModel>.value(_FakeSwapRequestModel_1(
          this,
          Invocation.method(
            #updateSwapRequest,
            [swapRequest],
          ),
        )),
      ) as _i4.Future<_i2.SwapRequestModel>);

  @override
  _i4.Future<void> deleteSwapRequest(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteSwapRequest,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
